CREATE TABLE ACCOUNT (
    ACCOUNT_ID INT PRIMARY KEY,
    USERNAME VARCHAR(255) UNIQUE NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE BUSINESS (
    BUSINESS_ID INT PRIMARY KEY,
    ACCOUNT_ID INT,
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID) ON DELETE CASCADE
);

CREATE TABLE LOCATION (
    BUSINESS_ID INT PRIMARY KEY,
    ADDRESS VARCHAR(255),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE
);

CREATE TABLE EMPLOYEE (
    BUSINESS_ID INT,
    EMPLOYEE_ID INT,
    FIRST_NAME VARCHAR(255),
    LAST_NAME VARCHAR(255),
    EMAIL VARCHAR(255),
    PHONE VARCHAR(20),
    ADDRESS VARCHAR(255),
    SALARY DECIMAL(10, 2),
    PRIMARY KEY (BUSINESS_ID, EMPLOYEE_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE
);

CREATE TABLE PRODUCTS (
    BUSINESS_ID INT,
    PRODUCT_ID INT,
    CATEGORY_NAME VARCHAR(255),
    PRODUCT_NAME VARCHAR(255),
    PRODUCT_DESCRIPTION TEXT,
    PRICE DECIMAL(10, 2),
    PRIMARY KEY (BUSINESS_ID, PRODUCT_ID),
    INDEX (PRODUCT_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE
);

CREATE TABLE SUPPLIERS (
    BUSINESS_ID INT,
    SUPPLIER_ID INT,
    SUPPLIER_NAME VARCHAR(255),
    EMAIL VARCHAR(255),
    PHONE VARCHAR(20),
    ADDRESS VARCHAR(255),
    SUPPLIER_CATEGORY TEXT,
    PRIMARY KEY (BUSINESS_ID, SUPPLIER_ID),
    INDEX (SUPPLIER_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE
);

CREATE TABLE CUSTOMERS (
    BUSINESS_ID INT,
    CUSTOMER_ID INT,
    FIRST_NAME VARCHAR(255),
    LAST_NAME VARCHAR(255),
    EMAIL VARCHAR(255),
    PHONE VARCHAR(20),
    ADDRESS VARCHAR(255),
    PRIMARY KEY (BUSINESS_ID, CUSTOMER_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE
);

CREATE TABLE SALES (
    BUSINESS_ID INT,
    SALES_ID INT,
    PRODUCT_ID INT,
    QUANTITY INT,
    ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PAYMENT_DETAILS TEXT,
    PRICE DECIMAL(10, 2),
    PRIMARY KEY (BUSINESS_ID, SALES_ID),
	INDEX (SALES_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID) ON DELETE CASCADE
);

CREATE TABLE ORDERS (
    BUSINESS_ID INT,
    ORDER_ID INT,
    SUPPLIER_ID INT,
    ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (BUSINESS_ID, ORDER_ID),
    INDEX (ORDER_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE,
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID) ON DELETE CASCADE
);

CREATE TABLE ORDER_DETAILS (
    BUSINESS_ID INT,
    ORDER_ID INT,
    PRODUCT_ID INT,
    QUANTITY INT,
    PRICE DECIMAL(10, 2),
    PRIMARY KEY (BUSINESS_ID, ORDER_ID, PRODUCT_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID) ON DELETE CASCADE
);

CREATE TABLE BALANCE (
    BUSINESS_ID INT,
    BALANCE_ID INT,
    SALES_ID INT,
    ORDER_ID INT,
    TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (BUSINESS_ID, BALANCE_ID),
    FOREIGN KEY (BUSINESS_ID) REFERENCES BUSINESS(BUSINESS_ID) ON DELETE CASCADE,
    FOREIGN KEY (SALES_ID) REFERENCES SALES(SALES_ID) ON DELETE CASCADE,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE
);

DELIMITER //
CREATE TRIGGER UPDATE_SALE_PRICE
BEFORE INSERT ON SALES
FOR EACH ROW
BEGIN
    DECLARE UNIT_PRICE DECIMAL(10, 2);

    SELECT PRICE INTO UNIT_PRICE FROM PRODUCTS
    WHERE BUSINESS_ID = NEW.BUSINESS_ID AND PRODUCT_ID = NEW.PRODUCT_ID;

    SET NEW.PRICE = UNIT_PRICE * NEW.QUANTITY;
END;
//
DELIMITER ;